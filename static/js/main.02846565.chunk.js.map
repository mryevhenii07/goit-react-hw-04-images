{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","App.module.css","components/Searchbar/Searchbar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","inputValue","setInputValue","className","s","searchbar","e","preventDefault","trim","toast","warn","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","searchQuery","currentPage","url","axios","get","ImageGalleryItem","images","onClick","map","id","webformatURL","largeImageURL","imageGalleryItem","imageGalleryItemImage","src","alt","ImageGallery","imageGallery","Button","button","Spiner","spinner","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","onBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","overlay","modal","children","Component","App","setSearchQuery","setImages","setCurrentPage","isLoading","setIsLoading","showModal","setShowModal","bigImageUrl","setBigImageUrl","imageStatus","setImageStatus","useEffect","fetchImagesGallery","a","options","api","data","total","error","filteredData","hits","hit","prevImages","console","log","toggleModal","prevShowModal","shouldRenderLoadMoreBtn","length","onLoad","query","prevPage","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02846565.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__2OxUO\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__3ShuE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3rnE9\",\"modal\":\"Modal_modal__MljLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__Mmc1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3P3bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__rj5xN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1uX3L\",\"searchForm\":\"Searchbar_searchForm__waPZm\",\"searchFormButton\":\"Searchbar_searchFormButton__2Bxgp\",\"searchFormInput\":\"Searchbar_searchFormInput__20buq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3AgOX\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\n\nimport { ImSearch } from \"react-icons/im\";\nimport s from \"./Searchbar.module.css\";\n\nconst SearchBar = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const reset = () => {\n    setInputValue(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim() === \"\") {\n      toast.warn(\"Введите ваш запрос\");\n      return;\n    }\n    onSubmit(inputValue); //значение инпута\n    reset();\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <button type=\"submit\" className={s.searchFormButton}>\n          <span className={s.searchFormButtonLabel}>\n            <ImSearch />\n          </span>\n        </button>\n\n        <input\n          className={s.searchFormInput}\n          type=\"text\"\n          value={inputValue}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={(e) => setInputValue(e.currentTarget.value.toLowerCase())}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchBar.propTypes = {\n  inputValue: PropTypes.string,\n};\n\nexport default SearchBar;\n","import axios from \"axios\";\nconst BASE_URL = \"https://pixabay.com/api\";\nconst API_KEY = \"25286524-a3e47886f4b5645396ef742cb\";\n\nconst fetchImages = ({ searchQuery = \"\", currentPage = 1 }) => {\n  const url = `${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=12&key=${API_KEY}`;\n\n  return axios.get(url);\n};\n\nexport default { fetchImages };\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({ images, onClick }) => (\n  <>\n    {images.map(({ id, webformatURL, largeImageURL }) => {\n      return (\n        <li key={id} className={s.imageGalleryItem}>\n          <img\n            className={s.imageGalleryItemImage}\n            onClick={() => onClick(largeImageURL)}\n            src={webformatURL}\n            alt=\"\"\n          />\n        </li>\n      );\n    })}\n  </>\n);\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className={s.imageGallery}>\n    <ImageGalleryItem images={images} onClick={onClick} />\n  </ul>\n);\n\nImageGallery.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nconst Button = ({ onClick }) => (\n  <button type=\"button\" className={s.button} onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport s from \"./Loader.module.css\";\n\nconst Spiner = () => {\n  return (\n    <div>\n      <Loader\n        className={s.spinner}\n        type=\"Rings\"\n        color=\"green\"\n        height={100}\n        width={100}\n      />\n    </div>\n  );\n};\nexport default Spiner;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    if (event.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  onBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.onBackdropClick}>\n        <div className={s.modal}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/Searchbar/Searchbar\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport api from \"services/api\";\n\nimport ImageGallery from \"components/ImageGallery/ImageGallery\";\nimport Button from \"components/Button/Button\";\nimport Spinner from \"components/Loader/Loader\";\nimport Modal from \"components/Modal/Modal\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"App.module.css\";\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [bigImageUrl, setBigImageUrl] = useState(\"\");\n  const [imageStatus, setImageStatus] = useState(\"loading\");\n\n  const onSearchHandle = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  useEffect(() => {\n    //если ничего не ввели в инпут, то запрос не выполнится\n    //searchQuery === null\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoading(true);\n    const fetchImagesGallery = async () => {\n      const options = {\n        searchQuery,\n        currentPage,\n      };\n      try {\n        const data = await api.fetchImages(options);\n        if (data.data.total === 0) {\n          toast.error(\"Нет совпадений с запросом\");\n          return;\n        }\n        const filteredData = data.data.hits.map((hit) => {\n          return {\n            id: hit.id,\n            webformatURL: hit.webformatURL,\n            largeImageURL: hit.largeImageURL,\n          };\n        });\n        setImages((prevImages) => [...prevImages, ...filteredData]);\n      } catch (err) {\n        console.log(err);\n        toast.error(\"Ошибка\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchImagesGallery();\n  }, [currentPage, searchQuery]);\n\n  const loadMore = () => {\n    setCurrentPage((prevPage) => prevPage + 1);\n  };\n  const onImageClick = (url) => {\n    setBigImageUrl(url);\n    toggleModal();\n    setImageStatus(\"loading\");\n  };\n  const toggleModal = () => {\n    setShowModal((prevShowModal) => !prevShowModal);\n  };\n  const onImageLoaded = () => {\n    setImageStatus(\"loaded\");\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n  return (\n    <div>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          {imageStatus === \"loading\" && (\n            <Loader type=\"ThreeDots\" color=\"#fff\" height={80} width={80} />\n          )}\n          <img src={bigImageUrl} alt=\"\" onLoad={onImageLoaded} />\n        </Modal>\n      )}\n\n      <SearchBar onSubmit={onSearchHandle} />\n      <ImageGallery images={images} onClick={onImageClick} />\n      {isLoading && <Spinner />}\n      {shouldRenderLoadMoreBtn && <Button onClick={loadMore} />}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}